name: Deploy docker compose

on:
  # secrets для ручного запуска храняться в репозитории CI-CD
  workflow_dispatch:
    inputs:
      compose_folder:
        description: "Путь к директории с целевым compose.yml"
        type: string
        required: true
      env_file_name:
        description: "Путь к файлу *.env нужного образа"
        type: string
        required: true
      env_file_text:
        description: "Наполнение *.env файла"
        type: string
        required: true
      compose_service_name:
        description: "Имя сервиса, который собираемся обновить"
        type: string
        required: true
      image_tag_env:
        description: "Переменная окружения для тега версии образа *_TAG={значение}"
        type: string
        required: true
      image_port_env:
        description: "Переменная окружения для порта образа *_PORT={значение}"
        type: number
        required: true
      environment_name:
        description: "Название стенда"
        required: true
        default: 'workflow_test'
        type: choice
        options:
        - development
        - production
        - workflow_test

  workflow_call:
    inputs:
      compose_folder:
        type: string
        required: true
      env_file_name:
        type: string
        required: true
      env_file_text:
        type: string
        required: true
      compose_service_name:
        type: string
        required: true
      image_tag_env:
        type: string
        required: true
      image_port_env:
        type: string
        required: true
      environment_name:
        type: string
        required: true
    secrets:
      SSH_PRIVATE_KEY:
        required: true
      SSH_HOST:
        required: true
      SSH_USER:
        required: true

jobs:
  docker-release:
    name: Развертывание образа докера в compose
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment_name }}
    steps:

      - uses: actions/checkout@v3
        with:
          repository: DaemonSharps/CI-CD

      - name: Install SSH key
        uses: webfactory/ssh-agent@v0.6.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Adding Known Hosts
        run: ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Create docker context
        run: docker context create vps-remote --docker "host=ssh://${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}"
      
      - name: Use new context
        run: docker context use vps-remote

      - name: Docker cleanup
        run: |
          echo Delete unnecessary containers
          docker container prune -f
          
          echo Delete unnecessary images
          docker image prune -a -f

          echo Delete unnecessary networks
          docker network prune -f

      - name: Create ${{ inputs.env_file_name }}
        run: |
          cd ${{ inputs.compose_folder }}
          echo ${{ inputs.env_file_text }} > ${{ inputs.env_file_name }}

      - name: Show containers
        run: |
          cd ${{ inputs.compose_folder }}
          docker compose ps
          docker ps
          
      - name: Context soft stop and restart
        run: |
          cd ${{ inputs.compose_folder }}
          export ${{ inputs.image_tag_env }}
          export ${{ inputs.image_port_env }}
          docker compose pull
          docker compose -p garage-site-${{ inputs.environment_name }} up -d --no-deps --force-recreate ${{ inputs.compose_service_name }}
      
      - name: Stop if testing
        if: inputs.environment_name == 'workflow_test'
        run: docker compose -p garage-site-${{ inputs.environment_name }} stop

      - name: Show containers
        run: |
          cd ${{ inputs.compose_folder }}
          docker compose ps
          docker ps