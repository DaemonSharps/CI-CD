name: Deploy docker compose

on:
  # secrets для ручного запуска храняться в репозитирии CI-CD
  workflow_dispatch:
    inputs:
      compose_folder:
        description: "Путь к директории с целевым compose.yml"
        type: string
        required: true
      env_file_name:
        description: "Путь к файлу *.env нужного образа"
        type: string
        required: true
      compose_service_name:
        description: "Имя сервиса, который собираемся обновить"
        type: string
        required: true
      image_tag_env:
        description: "Переменная окружения для тега версии образа *_TAG={значение}"
        type: string
        required: true

  workflow_call:
    inputs:
      compose_folder:
        type: string
        required: true
      env_file_name:
        type: string
        required: true
      env_text:
        type: string
        required: true
      compose_service_name:
        type: string
        required: true
      image_tag_env:
        type: string
        required: true
    secrets:
      SSH_PRIVATE_KEY:
        required: true
      SSH_HOST:
        required: true
      SSH_USER:
        required: true
      # base64 encoded
      ENV_TEXT:
        required: true

jobs:
  docker-release:
    name: Развертывание образа докера в compose
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v3

      - name: Install SSH key
        uses: webfactory/ssh-agent@v0.6.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      - name: Adding Known Hosts
        run: ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Create docker context
        run: docker context create vps-remote --docker "host=ssh://${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}"
      
      - name: Use new context
        run: docker context use vps-remote

      - name: Create ${{ inputs.env_file_name }}
        run: |
          cd ${{ inputs.compose_folder }}
          echo $ENV_TEXT | base64 -d > ${{ inputs.env_file_name }}
        env:
          ENV_TEXT: ${{ secrets.ENV_TEXT }}

      - name: Show containers
        run: |
          cd ${{ inputs.compose_folder }}
          docker compose ps
          docker ps
          
      - name: Context soft stop and restart
        run: |
          cd ${{ inputs.compose_folder }}
          export ${{ inputs.image_tag_env }}
          docker compose pull
          docker compose up -d --no-deps --force-recreate ${{ inputs.compose_service_name }}

      - name: Show containers
        run: |
          cd ${{ inputs.compose_folder }}
          docker compose ps
          docker ps